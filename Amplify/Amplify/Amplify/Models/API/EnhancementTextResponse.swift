//
// EnhancementTextResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct EnhancementTextResponse: Codable, JSONEncodable, Hashable {

    public static let enhancementIdRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^enh_[a-zA-Z0-9]+$/")
    /** Unique ID for the new enhancement */
    public var enhancementId: String
    /** The AI-enhanced version of the story */
    public var enhancedTranscript: String
    /** Dynamic, key-value insights from Gemini analysis */
    public var insights: [String: String]

    public init(enhancementId: String, enhancedTranscript: String, insights: [String: String]) {
        self.enhancementId = enhancementId
        self.enhancedTranscript = enhancedTranscript
        self.insights = insights
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case enhancementId = "enhancement_id"
        case enhancedTranscript = "enhanced_transcript"
        case insights
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(enhancementId, forKey: .enhancementId)
        try container.encode(enhancedTranscript, forKey: .enhancedTranscript)
        try container.encode(insights, forKey: .insights)
    }
}

