//
// EnhancementRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct EnhancementRequest: Codable, JSONEncodable, Hashable {

    public static let transcriptRule = StringRule(minLength: 1, maxLength: 5000, pattern: nil)
    public static let languageRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^[a-z]{2}$/")
    /** Base64 encoded JPEG or PNG image (max 10MB) */
    public var photoBase64: String
    /** User's original story transcript */
    public var transcript: String
    /** Language code (ISO 639-1) */
    public var language: String? = "en"

    public init(photoBase64: String, transcript: String, language: String? = "en") {
        self.photoBase64 = photoBase64
        self.transcript = transcript
        self.language = language
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case photoBase64 = "photo_base64"
        case transcript
        case language
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(photoBase64, forKey: .photoBase64)
        try container.encode(transcript, forKey: .transcript)
        try container.encodeIfPresent(language, forKey: .language)
    }
}

