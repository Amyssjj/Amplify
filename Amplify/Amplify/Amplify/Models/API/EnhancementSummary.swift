//
// EnhancementSummary.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct EnhancementSummary: Codable, JSONEncodable, Hashable {

    public enum AudioStatus: String, Codable, CaseIterable {
        case notGenerated = "not_generated"
        case ready = "ready"
    }
    public static let transcriptPreviewRule = StringRule(minLength: nil, maxLength: 100, pattern: nil)
    public var enhancementId: String
    public var createdAt: Date
    /** A short preview of the enhanced transcript */
    public var transcriptPreview: String
    /** Indicates if the audio has been generated. 'ready' implies it was generated at least once. */
    public var audioStatus: AudioStatus

    public init(enhancementId: String, createdAt: Date, transcriptPreview: String, audioStatus: AudioStatus) {
        self.enhancementId = enhancementId
        self.createdAt = createdAt
        self.transcriptPreview = transcriptPreview
        self.audioStatus = audioStatus
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case enhancementId = "enhancement_id"
        case createdAt = "created_at"
        case transcriptPreview = "transcript_preview"
        case audioStatus = "audio_status"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(enhancementId, forKey: .enhancementId)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(transcriptPreview, forKey: .transcriptPreview)
        try container.encode(audioStatus, forKey: .audioStatus)
    }
}

